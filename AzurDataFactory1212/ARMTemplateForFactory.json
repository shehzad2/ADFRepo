{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "AzurDataFactory1212"
		},
		"LS_BlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_BlobStorage'"
		},
		"LS_DataLakeGenn2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_DataLakeGenn2'"
		},
		"LS_DataLakeGenn2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stdatalakegen21212.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Power Query1",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EMP PowerQuery",
								"type": "DataFlowReference",
								"datasetParameters": {
									"DS_BlobStorageEmployee": {},
									"DS_BlobStorageDepartment": {},
									"UserQueryDSDataLakeGen2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQueryDSDataLakeGen2",
											"dataset": {
												"referenceName": "DS_DataLakeGen2",
												"type": "DatasetReference",
												"parameters": {}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Department.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> UserQueryDSDataLakeGen2"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-03-11T20:56:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/EMP PowerQuery')]",
				"[concat(variables('factoryId'), '/datasets/DS_DataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BlobStorageDepartment')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "departments.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DEPARTMENT_ID",
						"type": "String"
					},
					{
						"name": "DEPARTMENT_NAME",
						"type": "String"
					},
					{
						"name": "MANAGER_ID",
						"type": "String"
					},
					{
						"name": "LOCATION_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BlobStorageEmployee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employees.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPLOYEE_ID",
						"type": "String"
					},
					{
						"name": "FIRST_NAME",
						"type": "String"
					},
					{
						"name": "LAST_NAME",
						"type": "String"
					},
					{
						"name": "EMAIL",
						"type": "String"
					},
					{
						"name": "PHONE_NUMBER",
						"type": "String"
					},
					{
						"name": "HIRE_DATE",
						"type": "String"
					},
					{
						"name": "JOB_ID",
						"type": "String"
					},
					{
						"name": "SALARY",
						"type": "String"
					},
					{
						"name": "COMMISSION_PCT",
						"type": "String"
					},
					{
						"name": "MANAGER_ID",
						"type": "String"
					},
					{
						"name": "DEPARTMENT_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DataLakeGen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_DataLakeGenn2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "refind"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DataLakeGenn2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_BlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_BlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_DataLakeGenn2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_DataLakeGenn2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_DataLakeGenn2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EMP PowerQuery')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "DS_BlobStorageEmployee",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DS_BlobStorageEmployee",
							"dataset": {
								"referenceName": "DS_BlobStorageEmployee",
								"type": "DatasetReference"
							}
						},
						{
							"name": "DS_BlobStorageDepartment",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DS_BlobStorageDepartment",
							"dataset": {
								"referenceName": "DS_BlobStorageDepartment",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared DS_BlobStorageEmployee = let AdfDoc = AzureStorage.BlobContents(\"https://stblobstorage1212.blob.core.windows.net/raw/employees.csv\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]) in  PromotedHeaders;\r\nshared DS_BlobStorageDepartment = let AdfDoc = AzureStorage.BlobContents(\"https://stblobstorage1212.blob.core.windows.net/raw/departments.csv\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]) in  PromotedHeaders;\r\nshared UserQuery = let Source = #\"DS_BlobStorageEmployee\",\r\n  #\"Merged queries\" = Table.NestedJoin(Source, {\"DEPARTMENT_ID\"}, DS_BlobStorageDepartment, {\"DEPARTMENT_ID\"}, \"DS_BlobStorageDepartment\", JoinKind.LeftOuter),\r\n  #\"Expanded DS_BlobStorageDepartment\" = Table.ExpandTableColumn(#\"Merged queries\", \"DS_BlobStorageDepartment\", {\"DEPARTMENT_ID\", \"DEPARTMENT_NAME\", \"MANAGER_ID\", \"LOCATION_ID\"}, {\"DEPARTMENT_ID.1\", \"DEPARTMENT_NAME\", \"MANAGER_ID.1\", \"LOCATION_ID\"}),\r\n  #\"Removed columns\" = Table.RemoveColumns(#\"Expanded DS_BlobStorageDepartment\", {\"DEPARTMENT_ID.1\", \"MANAGER_ID\"}),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Removed columns\", {{\"SALARY\", Int64.Type}}),\r\n  #\"Grouped rows\" = Table.Group(#\"Changed column type\", {\"DEPARTMENT_ID\"}, {{\"Total Salary\", each List.Sum([SALARY]), type nullable number}}),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Grouped rows\", {{\"DEPARTMENT_ID\", \"DepartmentID\"}}) in #\"Renamed columns\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BlobStorageEmployee')]",
				"[concat(variables('factoryId'), '/datasets/DS_BlobStorageDepartment')]"
			]
		}
	]
}